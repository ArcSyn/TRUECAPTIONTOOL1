// After Effects Caption Script - Clean Captions
// Generated by CaptionFlow Enhanced
// Style: Helvetica-Light

function addCaptions() {
    var comp = app.project.activeItem;
    
    if (!comp || !(comp instanceof CompItem)) {
        alert("Please select a composition first.");
        return;
    }
    
    app.beginUndoGroup("Add Enhanced Captions");
    
    try {
        // Caption data
        var captions = [
        {
                "id": 1,
                "startTime": 10.5,
                "endTime": 13.24,
                "text": "Welcome to our enhanced caption system",
                "duration": 2.74
        },
        {
                "id": 2,
                "startTime": 13.5,
                "endTime": 16.8,
                "text": "This video demonstrates the new JSX export functionality",
                "duration": 3.3000000000000007
        },
        {
                "id": 3,
                "startTime": 17.1,
                "endTime": 20.4,
                "text": "You can now export captions with professional styling",
                "duration": 3.299999999999997
        },
        {
                "id": 4,
                "startTime": 22,
                "endTime": 25.3,
                "text": "The system supports multiple style templates",
                "duration": 3.3000000000000007
        },
        {
                "id": 5,
                "startTime": 25.6,
                "endTime": 28.9,
                "text": "Including modern, minimal, and bold designs",
                "duration": 3.299999999999997
        },
        {
                "id": 6,
                "startTime": 31.5,
                "endTime": 34.8,
                "text": "Scene mode automatically detects natural breaks",
                "duration": 3.299999999999997
        },
        {
                "id": 7,
                "startTime": 35.1,
                "endTime": 38.4,
                "text": "And creates separate JSX files for each scene",
                "duration": 3.299999999999997
        },
        {
                "id": 8,
                "startTime": 40,
                "endTime": 43.3,
                "text": "Perfect for complex video projects",
                "duration": 3.299999999999997
        },
        {
                "id": 9,
                "startTime": 43.6,
                "endTime": 46.9,
                "text": "With precise timing and animation support",
                "duration": 3.299999999999997
        },
        {
                "id": 10,
                "startTime": 47.2,
                "endTime": 50.5,
                "text": "Import directly into After Effects for professional results",
                "duration": 3.299999999999997
        }
];
        
        // Style configuration
        var style = {
        "font": "Helvetica-Light",
        "fontSize": 48,
        "color": [
                1,
                1,
                1
        ],
        "strokeColor": null,
        "strokeWidth": 0,
        "position": [
                0.5,
                0.9
        ],
        "justification": "CENTER_JUSTIFY",
        "animation": "none",
        "shadow": false
};
        
        for (var i = 0; i < captions.length; i++) {
            var caption = captions[i];
            var textLayer = comp.layers.addText(caption.text);
            textLayer.name = "Caption " + (i + 1) + " - " + caption.text.substring(0, 20) + "...";
            
            // Set timing
            textLayer.inPoint = caption.startTime;
            textLayer.outPoint = caption.endTime;
            
            // Apply text styling
            var textProp = textLayer.property("Source Text");
            var textDocument = textProp.value;
            
            textDocument.font = style.font;
            textDocument.fontSize = style.fontSize;
            textDocument.fillColor = style.color;
            
            if (style.strokeWidth > 0 && style.strokeColor) {
                textDocument.strokeColor = style.strokeColor;
                textDocument.strokeWidth = style.strokeWidth;
                textDocument.strokeOverFill = true;
            }
            
            textDocument.justification = ParagraphJustification[style.justification];
            textProp.setValue(textDocument);
            
            // Position
            var posX = style.position[0] * comp.width;
            var posY = style.position[1] * comp.height;
            textLayer.property("Position").setValue([posX, posY]);
            
            // Add shadow if enabled
            if (style.shadow) {
                var dropShadow = textLayer.property("Effects").addProperty("Drop Shadow");
                dropShadow.property("Opacity").setValue(180);
                dropShadow.property("Direction").setValue(135);
                dropShadow.property("Distance").setValue(style.shadowDistance || 5);
                dropShadow.property("Softness").setValue(10);
            }
            
            // Add animation based on style
            if (style.animation === "fadeIn") {
                var opacity = textLayer.property("Opacity");
                opacity.setValueAtTime(textLayer.inPoint, 0);
                opacity.setValueAtTime(textLayer.inPoint + 0.3, 100);
                opacity.setValueAtTime(textLayer.outPoint - 0.3, 100);
                opacity.setValueAtTime(textLayer.outPoint, 0);
            } else if (style.animation === "slideUp") {
                var position = textLayer.property("Position");
                var startPos = [posX, posY + 50];
                var endPos = [posX, posY];
                position.setValueAtTime(textLayer.inPoint, startPos);
                position.setValueAtTime(textLayer.inPoint + 0.5, endPos);
            }
        }
        
        app.endUndoGroup();
        alert("Successfully added " + captions.length + " captions!");
        
    } catch (error) {
        app.endUndoGroup();
        alert("Error adding captions: " + error.toString());
    }
}

// Execute the function
addCaptions();
